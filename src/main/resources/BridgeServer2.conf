bridge.env=local
bridge.user=your-username-here

# CloudFormation did not match our original environment tokens, so we must map between them in some cases
local.bucket.suffix = local-${bridge.user}
dev.bucket.suffix = develop
uat.bucket.suffix = uat
prod.bucket.suffix = prod

# AWS server account
aws.key = dummy-value
aws.secret.key = dummy-value

# AWS credentials for sending push notifications
sns.key = dummy-value
sns.secret.key = dummy-value

heartbeat.interval.minutes=30

channel.throttle.max.requests = 1
channel.throttle.timeout.seconds = 300

ses.notification.topic.arn = arn:aws:sns:us-east-1:649232250620:SNSBounces

synapse.user = yours-synapse-user
synapse.api.key = yours-synapse-api-key

exporter.synapse.id = 3325672
test.synapse.user.id = 3348228


# Excludes the original try. For example, if this is set to 1, DDB will try a total of twice (one try, one retry)
ddb.max.retries = 1

# Hibernate (MySQL) configs
hibernate.connection.password = your password here
hibernate.connection.url = jdbc:mysql://localhost:3306/your-db-name-here
hibernate.connection.username = your username here
hibernate.connection.useSSL = false

# Max number of connections under our current plan is 256
redis.max.total = 50
redis.min.idle = 3
redis.max.idle = 50
redis.timeout = 2000

elasticache.url = redis://localhost:6379

async.worker.thread.count = 20

support.email.plain = support@sagebridge.org
support.email = Bridge (Sage Bionetworks) <${support.email.plain}>
sysops.email = Bridge IT <bridge-testing+sysops@sagebase.org>

email.unsubscribe.token = dummy-value

bridge.healthcode.redis.key = zEjhUL/FVsN8vti6HO27XgrM32i1a3huEuXWD4Hq06I=

fphs.id.add.limit = 10
uat.fphs.id.add.limit = 100
prod.fphs.id.add.limit = 100

external.id.add.limit = 10
uat.external.id.add.limit = 100
prod.external.id.add.limit = 100

local.host.postfix = -local-${bridge.user}.sagebridge.org
dev.host.postfix = -develop.sagebridge.org
uat.host.postfix = -staging.sagebridge.org
prod.host.postfix = .sagebridge.org

webservices.url = https://ws-${host.postfix}
local.webservices.url = http://localhost:9000

route53.zone = ZP0HNVK1V670D

# Synapse Team IDs, used by the BridgeStudyCreator when creating Synapse projects.
team.bridge.admin = 3388390
team.bridge.staff = 3388389
prod.team.bridge.admin = 3388392
prod.team.bridge.staff = 3388391

# Synapse mHealth Project Tracking Views
dev.synapse.tracking.view = syn20683692
uat.synapse.tracking.view = syn20683693
prod.synapse.tracking.view = syn11956745

# Upload buckets
local.upload.bucket = org-sagebridge-upload-${bucket.suffix}

# Health Data Attachment buckets
local.attachment.bucket = org-sagebridge-attachment-${bucket.suffix}

# Upload CMS certificate information
upload.cms.certificate.country = US
upload.cms.certificate.state = WA
upload.cms.certificate.city = Seattle
upload.cms.certificate.organization = Sage Bionetworks
upload.cms.certificate.team = Bridge
upload.cms.certificate.email = bridgeIT@sagebase.org

# Buckets for CMS key pairs
# System needs the CMS keys in the shared local buckets, or integration tests fail
upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-${bucket.suffix}
local.upload.cms.cert.bucket = org-sagebridge-upload-cms-cert-local
upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-${bucket.suffix}
local.upload.cms.priv.bucket = org-sagebridge-upload-cms-priv-local

# Maximum 100 MB per zip entry
max.zip.entry.size = 100000000
# Maximum 100 zip entries per archive
max.num.zip.entries = 100

# Buckets for the content of each consent revision
local.consents.bucket = org-sagebridge-consents-${bucket.suffix}

# Bridge Exporter SQS queues

exporter.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-EX-Request-${bucket.suffix}
# Until we have a SQS intializer, we must break the suffix pattern
local.exporter.request.sqs.queue.url=https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-EX-Request-local

# Bridge User Data Download Service SQS queues
udd.sqs.queue.url = https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-${bucket.suffix}
local.udd.sqs.queue.url = https://sqs.us-east-1.amazonaws.com/649232250620/Bridge-WorkerPlatform-Request-local

# List of apps that should never be deleted
local.app.whitelist = api
dev.app.whitelist = api
uat.app.whitelist = api,ios-sdk-int-tests,asthma,cardiovascular
prod.app.whitelist = api,asthma,breastcancer,cardiovascular,diabetes,fphs,fphs-lab,ohsu-molemapper,parkinson,parkinson-lux,lilly

local.usersigned.consents.bucket = local.usersigned.consents.bucket
dev.usersigned.consents.bucket = bridgepf-develop-awss3usersignedconsentsdownloadb-apwbxc8ldmj2
uat.usersigned.consents.bucket = bridgepf-uat-awss3usersignedconsentsdownloadbucke-hcuoz4eztd8g
prod.usersigned.consents.bucket = bridgepf-prod-awss3usersignedconsentsdownloadbuck-1slz1bcz0mls7

# Bootstrap credentials for integration tests (will only be used when first initializing your database). 
# Whatever values you select here to initialize your server, must be mirrored in the Bridge SDK's 
# bridge-sdk.properties file.

admin.email = dummy-value
admin.password = dummy-value

api.developer.email = dummy-value
api.developer.password = dummy-value

shared.developer.email = dummy-value
shared.developer.password = dummy-value

synapse.oauth.url = https://repo-prod.prod.sagebase.org/auth/v1/oauth2/token
synapse.oauth.client.id = dummy-value
synapse.oauth.client.secret = dummy-value

# To reverse geocode location of appointments in CRC controller
crc.geocode.api.key = dummy-value

cuimc.test.location.url = https://xeperno.nyp.org/nypcovi/Location/_search
cuimc.test.username = dummy-value
cuimc.test.password = dummy-value

# These are not currently the production endpoint.
cuimc.prod.location.url = https://xeperno.nyp.org/nypcovi/Location/_search
cuimc.prod.username = dummy-value
cuimc.prod.password = dummy-value

gbf.order.place.url = https://www.gbfmedical.com/oap/api/order
gbf.order.status.url = https://www.gbfmedical.com/oap/api/status
gbf.order.cancel.url = https://www.gbfmedical.com/oap/api/cancelorder
gbf.order.returns.url = https://www.gbfmedical.com/oap/api/returns
gbf.ship.confirmation.url = https://www.gbfmedical.com/oap/api/confirm
gbf.api.key = dummy-value

# The allowlist of URL query parameters.
# Other parameters in the query will not show up in the server log,
# in order to protect PII.
query.param.allowlist = type,appId,studyId,IdFilter,assignmentFilter,externalId,identifier,ownerId,newIdentifier,name,notes,tags,includeDeleted,physical,format,summary,startTime,endTime,pageSize,offsetKey,offsetBy,tag,category,minRevision,maxRevision,queryParam,createAccount,createdOnStart,createdOnEnd,consents,scheduledOnStart,scheduledOnEnd,startDate,endDate,deleteReauthToken,until,daysAhead,minimumPerSchedule,mostRecent,mostrecent,published,newSchemaRev,synchronous,redrive

# Participant File S3 bucket name
participant-file.bucket = org-sagebridge-participantfile-${bucket.suffix}

# Public documents folder
docs.bucket = docs${host.postfix}

# Note however that the CloudFormation-created buckets are not this straight-forward, and
# will have to be special-cased when added. 
health.data.bucket.raw = bridgeserver2-${bucket.suffix}-rawhealthdatabucket
health.data.bucket.processed = bridgeserver2-${bucket.suffix}-processedhealthdatabucket

